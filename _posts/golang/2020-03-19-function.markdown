---
layout: post
title:  "Function"
date:   2019-03-19 11:50:00 +0530
categories: ["golang"]
author: "Bestests"
---
<link rel="stylesheet" href="/js/highlight/styles/monokai.css" />
<script src="/js/highlight/highlight.pack.js"></script>
<script>hljs.initHighlightingOnLoad();</script>

<h1>#Funciton</h1>
---
<pre>
  <code class="go">
      package main
      
      import (
          "fmt"
      )
      
      // 선언 방법 - func 함수명 (파라미터명 파라미터타입) 리턴타입 
      func funcTest1 (str string) string {
          result := str
          
          return result
      }
      
      // 함수명 대문자 선언은 export로 다른 패키지에서 실행가능
      func FuncTest2 (num int) int {
          result := num
          
          return result
      }
      
      // 파라미터 타입이 같을땐 ‘,’ 로 연속하여 선언 가능
      // 리턴 변수도 사용 가능
      func funcTest3 (num1, num2 int) (num3 int) {
          num3 = num1 + num2
         
          // 마지막에 꼭 return 명시해줌
          return
          
          // 변수명 return도 가능은 함
          // return num3
      }
      
      // 리턴 복수로 가능
      func funcTest4 (str string, num int) (addStr string, addNum int) {
          addStr = "Hello, " + str
          addNum = num + 1
          
          return
      }
      
      func main () {
          var str = funcTest1("test")
          
          fmt.Println(str)
          
          num := FuncTest2(10)
          
          fmt.Println(num)
          
          plusNum := funcTest3(1, 2)
          
          fmt.Println(plusNum)
          
          // 리턴 복수로 받을때 변수도 복수로 선언하여 사용
          addStr, addNum := funcTest4("World", 2)
          
          fmt.Println(addStr)
          fmt.Println(addNum)
      }
  </code>
</pre>
---
